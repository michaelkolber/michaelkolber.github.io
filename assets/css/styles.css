/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/***************************************/
/************ GLOBAL STYLES ************/
/***************************************/
:root {
  color: #3e4860;
  font-family: 'Nunito Sans', 'Arial', sans-serif; }

h1 {
  font-size: 2.5rem; }

section,
.limit-width {
  margin: 0 auto;
  max-width: 37rem;
  padding: 3rem .5rem 1rem; }

a {
  color: inherit;
  padding: .575rem 0;
  -webkit-text-decoration-color: #7cbeff;
          text-decoration-color: #7cbeff;
  -webkit-transition: color .2s;
  transition: color .2s; }
  a:hover {
    color: #7cbeff; }

/***************************************/
/********** COMPONENT STYLES ***********/
/***************************************/
.button, .contact-form__submit {
  background-color: #3e4860;
  border-radius: 4px;
  color: white;
  cursor: pointer;
  display: inline-block;
  font-weight: 700;
  padding: 1rem;
  -webkit-transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out; }
  a.button, a.contact-form__submit {
    text-decoration: none; }
  .button:hover, .contact-form__submit:hover {
    background-color: #515a70; }
  .button--outline {
    background-color: transparent;
    border: 1px solid #3e4860;
    color: #3e4860; }
    .button--outline:hover {
      background-color: #3e4860;
      color: white; }

.full-width {
  max-width: inherit; }

.header {
  margin-bottom: 0;
  text-align: center; }
  .header__name {
    color: #7cbeff; }
  .header__linebreak {
    display: none; }
    @media (max-width: 32rem) {
      .header__linebreak {
        display: initial; } }
  .header--subheader {
    margin: 1rem 0 0;
    text-decoration: underline;
    -webkit-text-decoration-color: #7cbeff;
            text-decoration-color: #7cbeff; }
  .header--small {
    color: #7cbeff;
    font-size: 1rem;
    text-align: left; }

.text {
  max-width: 37rem; }

/***************************************/
/************ CONTENT STYLES ***********/
/***************************************/
.intro {
  background-color: #3e4860;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: white;
  display: table;
  height: 100vh;
  max-width: none;
  padding: 2rem 1rem;
  width: 100%; }
  .intro__content-wrapper {
    display: inline-block;
    display: table-cell;
    vertical-align: middle; }
  .intro .header {
    margin: 0; }
  .intro__tagline {
    font-size: 1.125rem;
    text-align: center; }

.nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin: 7rem 0 0; }
  .nav--sticky {
    background-color: #3e4860;
    left: 0;
    margin-top: 0;
    position: fixed;
    top: 0;
    width: 100%;
    z-index: 4000; }
  .nav__item {
    padding: 1.125rem; }
    @media (max-width: 24rem) {
      .nav__item {
        padding: 1.125rem .5625rem; } }
    @media (max-width: 19.25rem) {
      .nav__item {
        padding: 1.125rem .25rem; } }

.about {
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column; }

.language--html {
  color: #e44b23; }

.language--css {
  color: #563d7c; }

.language--sass {
  color: #c69; }

.language--python {
  color: #3572a5; }

.language--cpp {
  color: #f34b7d; }

.language--javascript {
  color: #f1e05a; }

.language--typescript {
  color: #2b7489; }

.language--nodejs {
  color: #026e00; }

.language--java {
  color: #b07219; }

.language--redis {
  color: #ca261c; }

.language--vba {
  color: #945db7; }

.work {
  max-width: 65rem;
  text-align: center; }
  .work-gallery {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    margin: 2rem auto; }
  .work-item {
    background: no-repeat center/110%;
    background-color: #7cbeff;
    border-radius: 4px;
    height: 210px;
    overflow: hidden;
    position: relative;
    -webkit-transition: background-size 0.2s ease-out;
    transition: background-size 0.2s ease-out; }
    .work-item-wrapper:hover .work-item {
      background-size: 100%; }
    .work-item-wrapper {
      color: inherit !important;
      display: block;
      margin: 0 .5rem;
      text-decoration: none;
      width: 320px; }
    .work-item__overlay {
      background-color: rgba(0, 0, 0, 0.6);
      border-radius: 4px;
      color: white;
      display: table;
      height: 100%;
      left: 0;
      opacity: 0;
      padding: 2.5rem;
      position: absolute;
      top: 0;
      -webkit-transition: opacity 0.2s ease-in-out;
      transition: opacity 0.2s ease-in-out; }
      .work-item-wrapper:hover .work-item__overlay {
        opacity: 1; }
    .work-item__description {
      display: inline-block;
      display: table-cell;
      font-size: 1.2rem;
      line-height: 1.5;
      text-align: center;
      vertical-align: middle; }
    .work-item__name {
      font-weight: 700; }
      .work-item__name-wrapper {
        margin: 1rem 0;
        text-align: center; }

.button--github__icon {
  background-color: white;
  border-radius: 4rem;
  height: 1em;
  margin-right: .4em;
  padding: 2px;
  vertical-align: text-top; }

.contact--submit-success__text {
  background-color: #5cb85c;
  border-radius: 4px;
  color: white;
  display: none;
  padding: .75rem; }
  .contact--submit-success__text--visible {
    display: block; }

.contact__text {
  margin: 1.5rem 0 0;
  text-align: center; }
  .contact__text--hidden {
    display: none; }

.contact-form-wrapper {
  margin-top: .5rem;
  padding: .5rem 0;
  position: relative; }

.contact-form__field {
  border: 2px solid #3e4860;
  border-radius: 4px;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: block;
  margin: 1rem auto;
  max-width: 25rem;
  min-height: 3rem;
  padding: 0 .5rem;
  -webkit-transition: border-color 0.2s ease-in-out;
  transition: border-color 0.2s ease-in-out;
  width: 100%; }
  .contact-form__field:focus {
    border-color: #7cbeff;
    outline: none; }
  .contact-form__field--textarea {
    padding: .5rem; }

.contact-form__submit {
  border: none;
  display: block;
  margin: 0 auto;
  padding: .75rem 1.25rem; }

.linkedin-shoutout {
  font-weight: 600;
  text-align: center; }

.footer {
  background-color: #3e4860;
  color: white;
  min-height: 2rem;
  padding: 1rem; }
  .footer__text {
    text-align: right; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
